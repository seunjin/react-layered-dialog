import {
  createDialogManager,
  createUseDialogs,
  type BaseLayerProps,
  type DialogState,
} from 'react-layered-dialog';
import { Alert } from '@/components/dialogs/Alert';
import { Confirm } from '@/components/dialogs/Confirm';

type AlertState = {
  type: 'alert';
  title: string;
  message: string;
  onOk?: () => void;
} & Partial<BaseLayerProps>;

type ConfirmState = {
  type: 'confirm';
  title: string;
  message: string;
  onConfirm?: () => void;
  onCancel?: () => void;
} & Partial<BaseLayerProps>;

type AppDialogState = AlertState | ConfirmState;

export type AlertDialogProps = DialogState<AlertState>;
export type ConfirmDialogProps = DialogState<ConfirmState>;

const { manager } = createDialogManager<AppDialogState>();

export const useDialogs = createUseDialogs(manager, {
  alert: Alert,
  confirm: Confirm,
});

export const openDialog = manager.openDialog;
export const closeDialog = manager.closeDialog;
export const closeAllDialogs = manager.closeAllDialogs;
export const updateDialog = manager.updateDialog;
