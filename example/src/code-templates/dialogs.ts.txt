import {
  createDialogManager,
  createUseDialogs,
  type BaseState,
} from 'react-layered-dialog';
import { Alert } from '@/components/dialogs/Alert';
import { Confirm } from '@/components/dialogs/Confirm';

type AlertState = BaseState & {
  type: 'alert';
  title: string;
  message: string;
  onOk?: () => void;
};

type ConfirmState = BaseState & {
  type: 'confirm';
  title: string;
  message: string;
  onConfirm?: () => void;
  onCancel?: () => void;
};

type AppDialogState = AlertState | ConfirmState;

export type AlertDialogState = Extract<AppDialogState, { type: 'alert' }>;
export type ConfirmDialogState = Extract<AppDialogState, { type: 'confirm' }>;

const { manager } = createDialogManager<AppDialogState>();

export const useDialogs = createUseDialogs(manager, {
  alert: Alert,
  confirm: Confirm,
});

export const openDialog = manager.openDialog;
export const closeDialog = manager.closeDialog;
export const closeAllDialogs = manager.closeAllDialogs;
export const updateDialog = manager.updateDialog;
